{
  "address": "0xf9d30BaEAf6e8b87Cf317c856C23daCC46E9DCBF",
  "abi": [
    {
      "inputs": [],
      "name": "SpotifyWeb3_CountCannotBeZero",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SpotifyWeb3_NameIsRequired",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "SpotifyWeb3_ZeroAddressProvided",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "albumAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "songsCount",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timeStamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "albumName",
          "type": "string"
        }
      ],
      "name": "AlbumAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "albumAddress",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "songsCount",
          "type": "uint32"
        },
        {
          "internalType": "string",
          "name": "albumName",
          "type": "string"
        }
      ],
      "name": "addAlbum",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getAlbumById",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "albumAddress",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "songsCount",
              "type": "uint32"
            },
            {
              "internalType": "uint256",
              "name": "timeStamp",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "albumName",
              "type": "string"
            }
          ],
          "internalType": "struct SpotifyWeb3.Album",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAlbumCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xc0c706549f65f55c7f5a164c401bef10633ac12ba5200f749e3b813cff99ea1e",
  "receipt": {
    "to": null,
    "from": "0x6A00422C67579157C48A574E7064c2B856fc14f3",
    "contractAddress": "0xf9d30BaEAf6e8b87Cf317c856C23daCC46E9DCBF",
    "transactionIndex": 31,
    "gasUsed": "1073521",
    "logsBloom": "0x
    "blockHash": "0x3a672aab32fcad9ca3fae05bdb76223e846b0888e698e441a6b6ce0f17f23535",
    "transactionHash": "0xc0c706549f65f55c7f5a164c401bef10633ac12ba5200f749e3b813cff99ea1e",
    "logs": [
      {
        "transactionIndex": 31,
        "blockNumber": 28307615,
        "transactionHash": "0xc0c706549f65f55c7f5a164c401bef10633ac12ba5200f749e3b813cff99ea1e",
        "address": "0xf9d30BaEAf6e8b87Cf317c856C23daCC46E9DCBF",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000006a00422c67579157c48a574e7064c2b856fc14f3"
        ],
        "data": "0x",
        "logIndex": 170,
        "blockHash": "0x3a672aab32fcad9ca3fae05bdb76223e846b0888e698e441a6b6ce0f17f23535"
      },
      {
        "transactionIndex": 31,
        "blockNumber": 28307615,
        "transactionHash": "0xc0c706549f65f55c7f5a164c401bef10633ac12ba5200f749e3b813cff99ea1e",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x0000000000000000000000006a00422c67579157c48a574e7064c2b856fc14f3",
          "0x000000000000000000000000c275dc8be39f50d12f66b6a63629c39da5bae5bd"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000005b88ae0bb5d8f000000000000000000000000000000000000000000000000056b1bb58ef4cd5f00000000000000000000000000000000000000000000095640a8c09be7a8e6ef0000000000000000000000000000000000000000000000000565632aae396fd000000000000000000000000000000000000000000000095640ae7926c864447e",
        "logIndex": 171,
        "blockHash": "0x3a672aab32fcad9ca3fae05bdb76223e846b0888e698e441a6b6ce0f17f23535"
      }
    ],
    "blockNumber": 28307615,
    "cumulativeGasUsed": "7047585",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 2,
  "solcInputHash": "0ee2f3d0f789677cfcfca46cb3f513f5",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"SpotifyWeb3_CountCannotBeZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SpotifyWeb3_NameIsRequired\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"SpotifyWeb3_ZeroAddressProvided\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"albumAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"songsCount\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timeStamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"albumName\",\"type\":\"string\"}],\"name\":\"AlbumAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"albumAddress\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"songsCount\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"albumName\",\"type\":\"string\"}],\"name\":\"addAlbum\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getAlbumById\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"albumAddress\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"songsCount\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"timeStamp\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"albumName\",\"type\":\"string\"}],\"internalType\":\"struct SpotifyWeb3.Album\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAlbumCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SpotifyWeb3.sol\":\"SpotifyWeb3\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/SpotifyWeb3.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.4;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\nerror SpotifyWeb3_ZeroAddressProvided(address);\\r\\nerror SpotifyWeb3_CountCannotBeZero();\\r\\nerror SpotifyWeb3_NameIsRequired();\\r\\n\\r\\ncontract SpotifyWeb3 is Ownable {\\r\\n  mapping(uint256 => Album) private s_Albums;\\r\\n  uint256 private s_albumCount = 0;\\r\\n\\r\\n  struct Album {\\r\\n    address owner;\\r\\n    address albumAddress;\\r\\n    uint32 songsCount;\\r\\n    uint256 timeStamp;\\r\\n    string albumName;\\r\\n  }\\r\\n\\r\\n  event AlbumAdded(\\r\\n    uint256 id,\\r\\n    address indexed owner,\\r\\n    address indexed albumAddress,\\r\\n    uint32 songsCount,\\r\\n    uint256 timeStamp,\\r\\n    string albumName\\r\\n  );\\r\\n\\r\\n  function addAlbum(\\r\\n    address owner,\\r\\n    address albumAddress,\\r\\n    uint32 songsCount,\\r\\n    string memory albumName\\r\\n  ) public onlyOwner {\\r\\n    if (owner == address(0) || albumAddress == address(0)) {\\r\\n      revert SpotifyWeb3_ZeroAddressProvided(address(0));\\r\\n    }\\r\\n\\r\\n    if (songsCount <= 0) {\\r\\n      revert SpotifyWeb3_CountCannotBeZero();\\r\\n    }\\r\\n\\r\\n    bytes memory AlbumNameInBytes = bytes(albumName);\\r\\n    if (AlbumNameInBytes.length <= 0) {\\r\\n      revert SpotifyWeb3_NameIsRequired();\\r\\n    }\\r\\n\\r\\n    uint256 currentId = s_albumCount;\\r\\n    s_Albums[currentId] = Album(\\r\\n      owner,\\r\\n      albumAddress,\\r\\n      songsCount,\\r\\n      block.timestamp,\\r\\n      albumName\\r\\n    );\\r\\n\\r\\n    s_albumCount++;\\r\\n\\r\\n    emit AlbumAdded(\\r\\n      currentId,\\r\\n      owner,\\r\\n      albumAddress,\\r\\n      songsCount,\\r\\n      block.timestamp,\\r\\n      albumName\\r\\n    );\\r\\n  }\\r\\n\\r\\n  //getter functions\\r\\n  function getAlbumById(uint256 id) public view returns (Album memory) {\\r\\n    return s_Albums[id];\\r\\n  }\\r\\n\\r\\n  function getAlbumCount() public view returns (uint256) {\\r\\n    return s_albumCount;\\r\\n  }\\r\\n}\\r\\n\",\"keccak256\":\"0xb4dc7fa99dbc5e0c9c8a97a36eebb6e8f8b1a2bf266a7ecc9c346cdc35fbab18\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052600060025534801561001557600080fd5b5061003261002761003760201b60201c565b61003f60201b60201c565b610103565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6111fa806101126000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806338aa02c21461006757806343c0c8ab14610097578063715018a6146100b35780638da5cb5b146100bd578063f2fde38b146100db578063f5767849146100f7575b600080fd5b610081600480360381019061007c9190610877565b610115565b60405161008e9190610a19565b60405180910390f35b6100b160048036038101906100ac9190610bc8565b6102b0565b005b6100bb6105b8565b005b6100c56105cc565b6040516100d29190610c5a565b60405180910390f35b6100f560048036038101906100f09190610c75565b6105f5565b005b6100ff610678565b60405161010c9190610cb1565b60405180910390f35b61011d6107cc565b600160008381526020019081526020016000206040518060a00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160149054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016002820154815260200160038201805461022790610cfb565b80601f016020809104026020016040519081016040528092919081815260200182805461025390610cfb565b80156102a05780601f10610275576101008083540402835291602001916102a0565b820191906000526020600020905b81548152906001019060200180831161028357829003601f168201915b5050505050815250509050919050565b6102b8610682565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061031f5750600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16145b156103625760006040517f0f3c7ba80000000000000000000000000000000000000000000000000000000081526004016103599190610c5a565b60405180910390fd5b60008263ffffffff16116103a2576040517f1b3fdb9800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600081905060008151116103e2576040517fc632d0f600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060025490506040518060a001604052808773ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018563ffffffff168152602001428152602001848152506001600083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548163ffffffff021916908363ffffffff1602179055506060820151816002015560808201518160030190816105299190610ed8565b509050506002600081548092919061054090610fd9565b91905055508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fdc859436ce1ecd06e26e250e07f91d8fcf63c777d377e5a3db5d5c76c9a7ae2d838742886040516105a8949392919061107a565b60405180910390a3505050505050565b6105c0610682565b6105ca6000610700565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6105fd610682565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361066c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066390611138565b60405180910390fd5b61067581610700565b50565b6000600254905090565b61068a6107c4565b73ffffffffffffffffffffffffffffffffffffffff166106a86105cc565b73ffffffffffffffffffffffffffffffffffffffff16146106fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f5906111a4565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6040518060a00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600063ffffffff16815260200160008152602001606081525090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61085481610841565b811461085f57600080fd5b50565b6000813590506108718161084b565b92915050565b60006020828403121561088d5761088c610837565b5b600061089b84828501610862565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108cf826108a4565b9050919050565b6108df816108c4565b82525050565b600063ffffffff82169050919050565b6108fe816108e5565b82525050565b61090d81610841565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561094d578082015181840152602081019050610932565b60008484015250505050565b6000601f19601f8301169050919050565b600061097582610913565b61097f818561091e565b935061098f81856020860161092f565b61099881610959565b840191505092915050565b600060a0830160008301516109bb60008601826108d6565b5060208301516109ce60208601826108d6565b5060408301516109e160408601826108f5565b5060608301516109f46060860182610904565b5060808301518482036080860152610a0c828261096a565b9150508091505092915050565b60006020820190508181036000830152610a3381846109a3565b905092915050565b610a44816108c4565b8114610a4f57600080fd5b50565b600081359050610a6181610a3b565b92915050565b610a70816108e5565b8114610a7b57600080fd5b50565b600081359050610a8d81610a67565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610ad582610959565b810181811067ffffffffffffffff82111715610af457610af3610a9d565b5b80604052505050565b6000610b0761082d565b9050610b138282610acc565b919050565b600067ffffffffffffffff821115610b3357610b32610a9d565b5b610b3c82610959565b9050602081019050919050565b82818337600083830152505050565b6000610b6b610b6684610b18565b610afd565b905082815260208101848484011115610b8757610b86610a98565b5b610b92848285610b49565b509392505050565b600082601f830112610baf57610bae610a93565b5b8135610bbf848260208601610b58565b91505092915050565b60008060008060808587031215610be257610be1610837565b5b6000610bf087828801610a52565b9450506020610c0187828801610a52565b9350506040610c1287828801610a7e565b925050606085013567ffffffffffffffff811115610c3357610c3261083c565b5b610c3f87828801610b9a565b91505092959194509250565b610c54816108c4565b82525050565b6000602082019050610c6f6000830184610c4b565b92915050565b600060208284031215610c8b57610c8a610837565b5b6000610c9984828501610a52565b91505092915050565b610cab81610841565b82525050565b6000602082019050610cc66000830184610ca2565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610d1357607f821691505b602082108103610d2657610d25610ccc565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610d8e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610d51565b610d988683610d51565b95508019841693508086168417925050509392505050565b6000819050919050565b6000610dd5610dd0610dcb84610841565b610db0565b610841565b9050919050565b6000819050919050565b610def83610dba565b610e03610dfb82610ddc565b848454610d5e565b825550505050565b600090565b610e18610e0b565b610e23818484610de6565b505050565b5b81811015610e4757610e3c600082610e10565b600181019050610e29565b5050565b601f821115610e8c57610e5d81610d2c565b610e6684610d41565b81016020851015610e75578190505b610e89610e8185610d41565b830182610e28565b50505b505050565b600082821c905092915050565b6000610eaf60001984600802610e91565b1980831691505092915050565b6000610ec88383610e9e565b9150826002028217905092915050565b610ee182610913565b67ffffffffffffffff811115610efa57610ef9610a9d565b5b610f048254610cfb565b610f0f828285610e4b565b600060209050601f831160018114610f425760008415610f30578287015190505b610f3a8582610ebc565b865550610fa2565b601f198416610f5086610d2c565b60005b82811015610f7857848901518255600182019150602085019450602081019050610f53565b86831015610f955784890151610f91601f891682610e9e565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610fe482610841565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361101657611015610faa565b5b600182019050919050565b61102a816108e5565b82525050565b600082825260208201905092915050565b600061104c82610913565b6110568185611030565b935061106681856020860161092f565b61106f81610959565b840191505092915050565b600060808201905061108f6000830187610ca2565b61109c6020830186611021565b6110a96040830185610ca2565b81810360608301526110bb8184611041565b905095945050505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611122602683611030565b915061112d826110c6565b604082019050919050565b6000602082019050818103600083015261115181611115565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061118e602083611030565b915061119982611158565b602082019050919050565b600060208201905081810360008301526111bd81611181565b905091905056fea2646970667358221220e0f0b4f31da2417fc6c5febf5c6c40d5e26244e04df1ed0c4d88ed05e16953e164736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c806338aa02c21461006757806343c0c8ab14610097578063715018a6146100b35780638da5cb5b146100bd578063f2fde38b146100db578063f5767849146100f7575b600080fd5b610081600480360381019061007c9190610877565b610115565b60405161008e9190610a19565b60405180910390f35b6100b160048036038101906100ac9190610bc8565b6102b0565b005b6100bb6105b8565b005b6100c56105cc565b6040516100d29190610c5a565b60405180910390f35b6100f560048036038101906100f09190610c75565b6105f5565b005b6100ff610678565b60405161010c9190610cb1565b60405180910390f35b61011d6107cc565b600160008381526020019081526020016000206040518060a00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160149054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016002820154815260200160038201805461022790610cfb565b80601f016020809104026020016040519081016040528092919081815260200182805461025390610cfb565b80156102a05780601f10610275576101008083540402835291602001916102a0565b820191906000526020600020905b81548152906001019060200180831161028357829003601f168201915b5050505050815250509050919050565b6102b8610682565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061031f5750600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16145b156103625760006040517f0f3c7ba80000000000000000000000000000000000000000000000000000000081526004016103599190610c5a565b60405180910390fd5b60008263ffffffff16116103a2576040517f1b3fdb9800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600081905060008151116103e2576040517fc632d0f600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060025490506040518060a001604052808773ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018563ffffffff168152602001428152602001848152506001600083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548163ffffffff021916908363ffffffff1602179055506060820151816002015560808201518160030190816105299190610ed8565b509050506002600081548092919061054090610fd9565b91905055508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fdc859436ce1ecd06e26e250e07f91d8fcf63c777d377e5a3db5d5c76c9a7ae2d838742886040516105a8949392919061107a565b60405180910390a3505050505050565b6105c0610682565b6105ca6000610700565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6105fd610682565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361066c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066390611138565b60405180910390fd5b61067581610700565b50565b6000600254905090565b61068a6107c4565b73ffffffffffffffffffffffffffffffffffffffff166106a86105cc565b73ffffffffffffffffffffffffffffffffffffffff16146106fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f5906111a4565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6040518060a00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600063ffffffff16815260200160008152602001606081525090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61085481610841565b811461085f57600080fd5b50565b6000813590506108718161084b565b92915050565b60006020828403121561088d5761088c610837565b5b600061089b84828501610862565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108cf826108a4565b9050919050565b6108df816108c4565b82525050565b600063ffffffff82169050919050565b6108fe816108e5565b82525050565b61090d81610841565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561094d578082015181840152602081019050610932565b60008484015250505050565b6000601f19601f8301169050919050565b600061097582610913565b61097f818561091e565b935061098f81856020860161092f565b61099881610959565b840191505092915050565b600060a0830160008301516109bb60008601826108d6565b5060208301516109ce60208601826108d6565b5060408301516109e160408601826108f5565b5060608301516109f46060860182610904565b5060808301518482036080860152610a0c828261096a565b9150508091505092915050565b60006020820190508181036000830152610a3381846109a3565b905092915050565b610a44816108c4565b8114610a4f57600080fd5b50565b600081359050610a6181610a3b565b92915050565b610a70816108e5565b8114610a7b57600080fd5b50565b600081359050610a8d81610a67565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610ad582610959565b810181811067ffffffffffffffff82111715610af457610af3610a9d565b5b80604052505050565b6000610b0761082d565b9050610b138282610acc565b919050565b600067ffffffffffffffff821115610b3357610b32610a9d565b5b610b3c82610959565b9050602081019050919050565b82818337600083830152505050565b6000610b6b610b6684610b18565b610afd565b905082815260208101848484011115610b8757610b86610a98565b5b610b92848285610b49565b509392505050565b600082601f830112610baf57610bae610a93565b5b8135610bbf848260208601610b58565b91505092915050565b60008060008060808587031215610be257610be1610837565b5b6000610bf087828801610a52565b9450506020610c0187828801610a52565b9350506040610c1287828801610a7e565b925050606085013567ffffffffffffffff811115610c3357610c3261083c565b5b610c3f87828801610b9a565b91505092959194509250565b610c54816108c4565b82525050565b6000602082019050610c6f6000830184610c4b565b92915050565b600060208284031215610c8b57610c8a610837565b5b6000610c9984828501610a52565b91505092915050565b610cab81610841565b82525050565b6000602082019050610cc66000830184610ca2565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610d1357607f821691505b602082108103610d2657610d25610ccc565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610d8e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610d51565b610d988683610d51565b95508019841693508086168417925050509392505050565b6000819050919050565b6000610dd5610dd0610dcb84610841565b610db0565b610841565b9050919050565b6000819050919050565b610def83610dba565b610e03610dfb82610ddc565b848454610d5e565b825550505050565b600090565b610e18610e0b565b610e23818484610de6565b505050565b5b81811015610e4757610e3c600082610e10565b600181019050610e29565b5050565b601f821115610e8c57610e5d81610d2c565b610e6684610d41565b81016020851015610e75578190505b610e89610e8185610d41565b830182610e28565b50505b505050565b600082821c905092915050565b6000610eaf60001984600802610e91565b1980831691505092915050565b6000610ec88383610e9e565b9150826002028217905092915050565b610ee182610913565b67ffffffffffffffff811115610efa57610ef9610a9d565b5b610f048254610cfb565b610f0f828285610e4b565b600060209050601f831160018114610f425760008415610f30578287015190505b610f3a8582610ebc565b865550610fa2565b601f198416610f5086610d2c565b60005b82811015610f7857848901518255600182019150602085019450602081019050610f53565b86831015610f955784890151610f91601f891682610e9e565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610fe482610841565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361101657611015610faa565b5b600182019050919050565b61102a816108e5565b82525050565b600082825260208201905092915050565b600061104c82610913565b6110568185611030565b935061106681856020860161092f565b61106f81610959565b840191505092915050565b600060808201905061108f6000830187610ca2565b61109c6020830186611021565b6110a96040830185610ca2565b81810360608301526110bb8184611041565b905095945050505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611122602683611030565b915061112d826110c6565b604082019050919050565b6000602082019050818103600083015261115181611115565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061118e602083611030565b915061119982611158565b602082019050919050565b600060208201905081810360008301526111bd81611181565b905091905056fea2646970667358221220e0f0b4f31da2417fc6c5febf5c6c40d5e26244e04df1ed0c4d88ed05e16953e164736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/SpotifyWeb3.sol:SpotifyWeb3",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 152,
        "contract": "contracts/SpotifyWeb3.sol:SpotifyWeb3",
        "label": "s_Albums",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_struct(Album)166_storage)"
      },
      {
        "astId": 155,
        "contract": "contracts/SpotifyWeb3.sol:SpotifyWeb3",
        "label": "s_albumCount",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_uint256,t_struct(Album)166_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct SpotifyWeb3.Album)",
        "numberOfBytes": "32",
        "value": "t_struct(Album)166_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Album)166_storage": {
        "encoding": "inplace",
        "label": "struct SpotifyWeb3.Album",
        "members": [
          {
            "astId": 157,
            "contract": "contracts/SpotifyWeb3.sol:SpotifyWeb3",
            "label": "owner",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 159,
            "contract": "contracts/SpotifyWeb3.sol:SpotifyWeb3",
            "label": "albumAddress",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 161,
            "contract": "contracts/SpotifyWeb3.sol:SpotifyWeb3",
            "label": "songsCount",
            "offset": 20,
            "slot": "1",
            "type": "t_uint32"
          },
          {
            "astId": 163,
            "contract": "contracts/SpotifyWeb3.sol:SpotifyWeb3",
            "label": "timeStamp",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 165,
            "contract": "contracts/SpotifyWeb3.sol:SpotifyWeb3",
            "label": "albumName",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint32": {
        "encoding": "inplace",
        "label": "uint32",
        "numberOfBytes": "4"
      }
    }
  }
}